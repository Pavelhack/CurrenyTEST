{"version":3,"sources":["components/Requests.js","components/Input.js","components/Select.js","components/InputSubmit.js","components/InfoRate.js","components/Header.js","App.js","index.js"],"names":["ArrCurrency","Option","Select","Requests","GEtCurrenciesJson","i","DB","length","push","name","currencyID","GetCurrenciesAPI","a","fetch","response","json","result","GetRateForUSDEUR","curr","res","GetRateSt1_St2","st1","st2","InputValue","setCurrency","useState","currencies","setCurrencies","inputValue","setValue","useEffect","req","array","then","data","results","sort","PopularCurrencies","forEach","element","filter","item","unshift","map","showSearch","value","style","width","margin","placeholder","optionFilterProp","onChange","SelectForm","currencyDefault","setCurrencyDefault","usd","setUSD","eur","setEUR","val","className","PriceInput","number","setNumber","undefined","currency","currency2","setCurrency2","triggerChange","changedValue","type","e","newNumber","parseInt","target","Number","isNaN","newCurrency","Demo","setResult","layout","onFinish","values","price","initialValues","Item","label","rules","validator","_","Promise","resolve","reject","Error","htmlType","InfoRate","Header","to","exact","color","backgroundColor","borderRadius","App","path","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8ac730e9.chunk.js","sourcesContent":["import DB from './CountryObject.json'\r\nimport {Select} from \"antd\";\r\nconst ArrCurrency = [];\r\nconst {Option} = Select;\r\n\r\n\r\nexport class Requests{\r\n\r\n    GEtCurrenciesJson = () =>{\r\n        for (let i = 0; i < DB.length - 1; i++) {\r\n            ArrCurrency.push(\r\n                <Option key={DB[i].name}>\r\n                    {DB[i].name}\r\n                    <br></br>\r\n                    {DB[i].currencyID}\r\n                </Option>\r\n            );\r\n        }\r\n        return ArrCurrency\r\n    }\r\n\r\n    GetCurrenciesAPI = async () =>{\r\n\r\n        let response = await fetch( \"https://free.currconv.com/api/v7/currencies?apiKey=cc1c42623e7c44a5dccf\");\r\n        let result = await response.json();\r\n\r\n        return result\r\n    }\r\n\r\n    GetRateForUSDEUR = async ( curr ) =>{\r\n        let res = await fetch(`https://free.currconv.com/api/v7/convert?apiKey=cc1c42623e7c44a5dccf&q=USD_${curr},EUR_${curr}`);\r\n        let result = await res.json();\r\n\r\n        return result\r\n    };\r\n\r\n    GetRateSt1_St2 = async (st1, st2) =>{\r\n        let res = await fetch(`https://free.currconv.com/api/v7/convert?apiKey=cc1c42623e7c44a5dccf&q=${st1}_${st2}`);\r\n        let result = await res.json();\r\n\r\n        return result\r\n    }\r\n}","import React, {useState, useEffect} from 'react';\r\nimport { Select} from \"antd\";\r\nimport {Requests} from \"./Requests\";\r\nconst {Option} = Select;\r\n\r\nexport const InputValue = ({ setCurrency }) => {\r\n\r\n    const [currencies, setCurrencies] = useState([]);\r\n\r\n    const [inputValue, setValue] = useState('currency')\r\n\r\n    function onChange(value) {\r\n\r\n        //let SelectCurrency = DB.find((elem) => {if(elem.value === value) return elem})\r\n\r\n        setCurrency(value);\r\n        setValue(value)\r\n    }\r\n\r\n    useEffect(\r\n        () => {\r\n            const req = new Requests()\r\n            let array =[]\r\n\r\n            req.GetCurrenciesAPI().then((data)=>{\r\n\r\n                for (let i in data.results) {\r\n                    array.push(i)\r\n                }\r\n\r\n                // sort of array\r\n                array.sort();\r\n\r\n                const PopularCurrencies = [\"USD\",\"EUR\",\"RUB\",\"BYN\",\"GBP\"];\r\n\r\n                // delete popular currencies from array\r\n                PopularCurrencies.forEach((element) =>{\r\n                    array = array.filter(item => item !== element)\r\n                })\r\n\r\n                // add popular currencies into start\r\n                array.unshift(...PopularCurrencies)\r\n\r\n                array = array.map((item) => <Option key={item}>{item}</Option> )\r\n\r\n                setCurrencies(array)\r\n            })\r\n\r\n        }, []\r\n    )\r\n    return (\r\n        <Select\r\n            showSearch\r\n            value = {inputValue}\r\n            style={{\r\n                width: \"120px\",\r\n                margin: '0 8px',\r\n\r\n            }}\r\n            placeholder=\"Select a currency\"\r\n            optionFilterProp=\"children\"\r\n            onChange={onChange}\r\n        >\r\n            {currencies}\r\n        </Select>\r\n    )\r\n}\r\n","import React, {useState, useEffect, useRef} from 'react';\r\nimport {InputValue} from './Input'\r\nimport {Requests} from \"./Requests\";\r\n\r\nexport const SelectForm = () =>{\r\n\r\n    const [currencyDefault, setCurrencyDefault] = useState(\"BYN\");\r\n\r\n    const [usd, setUSD] = useState(null);\r\n\r\n    const [eur, setEUR] = useState(null);\r\n\r\n    useEffect(\r\n        () => {\r\n            const req = new Requests();\r\n\r\n            req.GetRateForUSDEUR(currencyDefault).then(result =>{\r\n                setUSD(result.results[`USD_${currencyDefault}`].val);\r\n                setEUR(result.results[`EUR_${currencyDefault}`].val);\r\n            });\r\n\r\n        },[currencyDefault]\r\n\r\n    )\r\n\r\n\r\n\r\nreturn(\r\n    <div>\r\n        <div className = \"info\">\r\n            <h1>current currency {currencyDefault}</h1>\r\n            <div className = \"USD\">USD > {currencyDefault} = {usd}</div>\r\n            <div className = \"EUR\">EUR > {currencyDefault} = {eur}</div>\r\n        </div>\r\n        <InputValue setCurrency = {setCurrencyDefault}/>\r\n    </div>\r\n);\r\n}\r\n","import React, {useEffect, useState} from 'react';\r\nimport { Form, Input, Select, Button } from 'antd';\r\nimport {Requests} from \"./Requests\";\r\nconst { Option } = Select;\r\n\r\n\r\nconst PriceInput = ({ value = {}, onChange }) => {\r\n\r\n    const [number, setNumber] = useState(0);\r\n\r\n    const [currency, setCurrency] = useState(undefined);\r\n\r\n    const [currency2, setCurrency2] = useState(undefined);\r\n\r\n    const [currencies, setCurrencies] = useState([]);\r\n\r\n    useEffect(\r\n        () => {\r\n            const req = new Requests()\r\n            let array =[]\r\n\r\n            req.GetCurrenciesAPI().then((data)=>{\r\n\r\n                for (let i in data.results) {\r\n                    array.push(i)\r\n                }\r\n\r\n                // sort of array\r\n                array.sort();\r\n\r\n                const PopularCurrencies = [\"USD\",\"EUR\",\"RUB\",\"BYN\",\"GBP\"];\r\n\r\n                // delete popular currencies from array\r\n                PopularCurrencies.forEach((element) =>{\r\n                    array = array.filter(item => item !== element)\r\n                })\r\n\r\n                // add popular currencies into start\r\n                array.unshift(...PopularCurrencies)\r\n\r\n                array = array.map((item) => <Option key={item}>{item}</Option> )\r\n\r\n                setCurrencies(array)\r\n            })\r\n\r\n        }, []\r\n    )\r\n\r\n    const triggerChange = (changedValue) => {\r\n        onChange?.({\r\n            number,\r\n            currency,\r\n            currency2,\r\n            ...value,\r\n            ...changedValue,\r\n        });\r\n    };\r\n\r\n    const onNumberChange = (e) => {\r\n        const newNumber = parseInt(e.target.value || '0', 10);\r\n\r\n        if (Number.isNaN(number)) {\r\n            return;\r\n        }\r\n\r\n        if (!('number' in value)) {\r\n            setNumber(newNumber);\r\n        }\r\n\r\n        triggerChange({\r\n            number: newNumber,\r\n        });\r\n    };\r\n\r\n    const onCurrencyChange = (newCurrency) => {\r\n        if (!('currency' in value)) {\r\n            setCurrency(newCurrency);\r\n        }\r\n\r\n        triggerChange({\r\n            currency: newCurrency,\r\n        });\r\n    };\r\n    const onCurrencyChange2 = (newCurrency) => {\r\n        if (!('currency2' in value)) {\r\n            setCurrency2(newCurrency);\r\n        }\r\n\r\n        triggerChange({\r\n            currency2: newCurrency,\r\n        });\r\n    };\r\n\r\n    return (\r\n        <span>\r\n              <Input\r\n                  type=\"text\"\r\n                  value={value.number || number}\r\n                  onChange={onNumberChange}\r\n                  style={{\r\n                      width: 100,\r\n                  }}\r\n              />\r\n\r\n              <Select\r\n                  showSearch\r\n                  value={value.currency || \"currency\"}\r\n                  style={{ width: 80, margin: '0 8px' }}\r\n                  onChange={onCurrencyChange}\r\n              >\r\n                   {currencies}\r\n              </Select>\r\n\r\n              <Select\r\n                  showSearch\r\n                  value = {value.currency2 || \"currency\"}\r\n                  style={{ width: 80, margin: '0 8px' }}\r\n                  onChange={onCurrencyChange2}\r\n              >\r\n                   {currencies}\r\n              </Select>\r\n        </span>\r\n    );\r\n};\r\n\r\nexport const Demo = ({setResult}) => {\r\n\r\n    const onFinish = (values) => {\r\n\r\n        const req = new Requests()\r\n\r\n        req.GetRateSt1_St2(values.price.currency, values.price.currency2).then(result =>{\r\n            setResult(result.results[`${values.price.currency}_${values.price.currency2}`].val * values.price?.number);\r\n        })\r\n    };\r\n\r\n    const checkPrice = (_, value) => {\r\n        if (value.number > 0) {\r\n            return Promise.resolve();\r\n        }\r\n\r\n        return Promise.reject(new Error('Price must be greater than zero!'));\r\n    };\r\n\r\n    return (\r\n        <Form\r\n            name=\"customized_form_controls\"\r\n            layout=\"inline\"\r\n            onFinish={onFinish}\r\n            initialValues={{\r\n                price: {\r\n                    number: 0,\r\n                    currency: 'currency',\r\n                },\r\n            }}\r\n        >\r\n            <Form.Item\r\n                name=\"price\"\r\n                label=\"Price\"\r\n                rules={[\r\n                    {\r\n                        validator: checkPrice,\r\n                    },\r\n                ]}\r\n            >\r\n                <PriceInput />\r\n            </Form.Item>\r\n            <Form.Item>\r\n                <Button type=\"primary\" htmlType=\"submit\">\r\n                    Submit\r\n                </Button>\r\n            </Form.Item>\r\n        </Form>\r\n    );\r\n};","import {useState} from \"react\";\r\nimport {Demo} from \"./InputSubmit\";\r\n\r\nexport const InfoRate = () =>{\r\n\r\n    const [result, setResult] = useState();\r\n\r\n    return(\r\n        <div>\r\n            <div>\r\n                <p>It`s Your Value {result}</p>\r\n                <Demo  setResult={setResult}/>\r\n            </div>\r\n        </div>\r\n    )\r\n    \r\n}\r\n","import React from \"react\";\r\nimport { NavLink }  from \"react-router-dom\";\r\n\r\nexport const Header = () =>{\r\n    return(\r\n        <nav className=\"navbar\">\r\n        <h1>Online info</h1>\r\n        <div className=\"links\">\r\n        <NavLink to=\"/\" exact>Info</NavLink>\r\n        <NavLink to=\"/InfoRate\" style={{ \r\n            color: 'white', \r\n            backgroundColor: '#f1356d',\r\n            borderRadius: '8px' \r\n          }}>currency exchange</NavLink>\r\n        </div>\r\n      </nav>\r\n    );\r\n}\r\n","import './App.css';\r\nimport React, {useState} from \"react\"\r\nimport {SelectForm} from \"./components/Select\";\r\nimport {InfoRate} from \"./components/InfoRate\";\r\nimport {Header} from \"./components/Header\";\r\nimport {Route, Switch} from \"react-router-dom\"\r\n\r\n\r\nexport const App = () => {\r\n\r\n\r\n\r\n    return (\r\n        <div className=\"App\">\r\n            <Header/>\r\n            <div className=\"content\">\r\n\r\n                <Switch>\r\n\r\n                    <Route exact path=\"/\">\r\n                        <SelectForm />\r\n                    </Route>\r\n\r\n                    <Route exact path=\"/InfoRate\">\r\n                        <InfoRate/>\r\n                    </Route>\r\n\r\n                </Switch>\r\n            </div>\r\n        </div>\r\n    );\r\n}","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport {App} from './App'\r\nimport './index.css';\r\nimport {BrowserRouter, HashRouter} from \"react-router-dom\";\r\n/* import reportWebVitals from './reportWebVitals'; */\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <HashRouter>\r\n            <App />\r\n        </HashRouter>\r\n    </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\n/* reportWebVitals(); */\r\n"],"sourceRoot":""}