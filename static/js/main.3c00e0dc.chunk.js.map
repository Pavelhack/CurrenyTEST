{"version":3,"sources":["components/Input.js","components/Select.js","components/InputSubmit.js","components/InfoRate.js","components/Header.js","App.js","index.js"],"names":["InputValue","setCurrency","useState","currencies","setCurrencies","inputValue","setValue","ArrCurrency","Option","Select","i","length","push","useEffect","a","fetch","response","json","results","showSearch","value","style","width","margin","placeholder","optionFilterProp","onChange","SelectForm","currencyDefault","setCurrencyDefault","usd","setUSD","eur","setEUR","previousState","useRef","defaultCurrencies","current","res","resultFrom","val","className","PriceInput","number","setNumber","currency","currency2","setCurrency2","triggerChange","changedValue","type","e","newNumber","parseInt","target","Number","isNaN","newCurrency","Demo","setObject","name","layout","onFinish","values","initialValues","price","Item","label","rules","validator","_","Promise","resolve","reject","Error","htmlType","InfoRate","objectData","setObjectData","result","setResult","st1","st2","GetRate","Output","getResult","Header","to","exact","color","backgroundColor","borderRadius","App","currencyFrom","setCurrencyFrom","currencyTo","setCurrencyTo","path","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3c00e0dc.chunk.js","sourcesContent":["import React, {useState, useEffect} from 'react';\r\nimport {Select} from 'antd';\r\n\r\nexport const InputValue = ({ setCurrency }) => {\r\n\r\n    const [currencies, setCurrencies] = useState(0);\r\n\r\n    const [inputValue, setValue] = useState('currency')\r\n\r\n    let urlCurrencies = \"https://free.currconv.com/api/v7/currencies?apiKey=cc1c42623e7c44a5dccf\"\r\n\r\n    const ArrCurrency = [];\r\n\r\n    const {Option} = Select;\r\n\r\n    for (let i = 0; i < currencies.length - 1; i++) {\r\n        ArrCurrency.push(<Option key={currencies[i]}>{currencies[i]}</Option>);\r\n    }\r\n\r\n    useEffect(\r\n        () => {\r\n            if (currencies === 0) {\r\n                (async () => {\r\n                    let response = await fetch(urlCurrencies);\r\n                    let result = await response.json();\r\n                    for (let i in result.results) {\r\n                        ArrCurrency.push(i)\r\n                    }\r\n                    setCurrencies(ArrCurrency);\r\n                })();\r\n            }\r\n        }\r\n    )\r\n\r\n    function onChange(value) {\r\n        setCurrency(value);\r\n        setValue(value)\r\n    }\r\n\r\n    return (\r\n        <Select\r\n            showSearch\r\n            value = {inputValue}\r\n            style={{\r\n                width: 80,\r\n                margin: '0 8px',\r\n\r\n            }}\r\n            placeholder=\"Select a currency\"\r\n            optionFilterProp=\"children\"\r\n            onChange={onChange}\r\n        >\r\n            {ArrCurrency}\r\n        </Select>\r\n    )\r\n}\r\n","import React, {useState, useEffect, useRef} from 'react';\r\nimport {InputValue} from './Input'\r\n\r\nexport const SelectForm = ({currencyDefault , setCurrencyDefault}) =>{\r\n\r\n    const [usd, setUSD] = useState(null);\r\n\r\n    const [eur, setEUR] = useState(null);\r\n\r\n    let previousState = useRef(null);\r\n\r\n    let defaultCurrencies = `https://free.currconv.com/api/v7/convert?apiKey=do-not-use-this-key&q=USD_${currencyDefault},EUR_${currencyDefault}`\r\n\r\n    useEffect(\r\n        () => {\r\n            if(previousState.current !== currencyDefault){\r\n                (async () =>{\r\n                    let res = await fetch(defaultCurrencies);\r\n                    let resultFrom = await res.json();\r\n                        setUSD(resultFrom.results[`USD_${currencyDefault}`].val);\r\n                        setEUR(resultFrom.results[`EUR_${currencyDefault}`].val);\r\n                    previousState.current = currencyDefault;\r\n                })();\r\n            }\r\n        }\r\n    )\r\n\r\n\r\n\r\nreturn(\r\n    <div>\r\n        <div className = \"info\">\r\n            <h1>current currency {currencyDefault}</h1>\r\n            <div className = \"USD\">USD > {currencyDefault} = {usd}</div>\r\n            <div className = \"EUR\">EUR > {currencyDefault} = {eur}</div>\r\n        </div>\r\n        <InputValue setCurrency = {setCurrencyDefault}/>\r\n    </div>\r\n);\r\n}\r\n","import React, {useEffect, useState} from 'react';\r\nimport { Form, Input, Select, Button } from 'antd';\r\nimport {InputValue} from \"./Input\";\r\nconst { Option } = Select;\r\n\r\n\r\nconst PriceInput = ({ value = {}, onChange }) => {\r\n    const [number, setNumber] = useState(0);\r\n\r\n    const [currency, setCurrency] = useState('rmb');\r\n\r\n    const [currency2, setCurrency2] = useState(\"rmb\");\r\n\r\n    const [currencies, setCurrencies] = useState([]);\r\n\r\n    const UrlCurrencies = \"https://free.currconv.com/api/v7/currencies?apiKey=cc1c42623e7c44a5dccf\"\r\n\r\n    const ArrCurrency = [];\r\n\r\n    for (let i = 0; i < currencies.length - 1; i++) {\r\n        ArrCurrency.push(<Option key={currencies[i]}>{currencies[i]}</Option>);\r\n    }\r\n\r\n    useEffect(\r\n        () => {\r\n            if (currencies.length === 0) {\r\n                (async () => {\r\n                    let response = await fetch(UrlCurrencies);\r\n                    let result = await response.json();\r\n                    for (let i in result.results) {\r\n                        ArrCurrency.push(i)\r\n                    }\r\n                    setCurrencies(ArrCurrency);\r\n                })();\r\n            }\r\n        }\r\n    )\r\n\r\n    const triggerChange = (changedValue) => {\r\n        onChange?.({\r\n            number,\r\n            currency,\r\n            currency2,\r\n            ...value,\r\n            ...changedValue,\r\n        });\r\n    };\r\n\r\n    const onNumberChange = (e) => {\r\n        const newNumber = parseInt(e.target.value || '0', 10);\r\n\r\n        if (Number.isNaN(number)) {\r\n            return;\r\n        }\r\n\r\n        if (!('number' in value)) {\r\n            setNumber(newNumber);\r\n        }\r\n\r\n        triggerChange({\r\n            number: newNumber,\r\n        });\r\n    };\r\n\r\n    const onCurrencyChange = (newCurrency) => {\r\n        if (!('currency' in value)) {\r\n            setCurrency(newCurrency);\r\n        }\r\n\r\n        triggerChange({\r\n            currency: newCurrency,\r\n        });\r\n    };\r\n    const onCurrencyChange2 = (newCurrency) => {\r\n        if (!('currency2' in value)) {\r\n            setCurrency2(newCurrency);\r\n        }\r\n\r\n        triggerChange({\r\n            currency2: newCurrency,\r\n        });\r\n    };\r\n\r\n    return (\r\n        <span>\r\n              <Input\r\n                  type=\"text\"\r\n                  value={value.number || number}\r\n                  onChange={onNumberChange}\r\n                  style={{\r\n                      width: 100,\r\n                  }}\r\n              />\r\n\r\n              <Select\r\n                  showSearch\r\n                  value={value.currency || currency}\r\n                  style={{ width: 80, margin: '0 8px' }}\r\n                  onChange={onCurrencyChange}\r\n              >\r\n                   {ArrCurrency}\r\n              </Select>\r\n            <Select\r\n                  showSearch\r\n                  value={value.currency2 || currency2}\r\n                  style={{ width: 80, margin: '0 8px' }}\r\n                  onChange={onCurrencyChange2}\r\n              >\r\n                   {ArrCurrency}\r\n              </Select>\r\n        </span>\r\n    );\r\n};\r\n\r\nexport const Demo = ({setObject}) => {\r\n    const onFinish = (values) => {\r\n        setObject(values);\r\n    };\r\n\r\n    const checkPrice = (_, value) => {\r\n        if (value.number > 0) {\r\n            return Promise.resolve();\r\n        }\r\n\r\n        return Promise.reject(new Error('Price must be greater than zero!'));\r\n    };\r\n\r\n    return (\r\n        <Form\r\n            name=\"customized_form_controls\"\r\n            layout=\"inline\"\r\n            onFinish={onFinish}\r\n            initialValues={{\r\n                price: {\r\n                    number: 0,\r\n                    currency: 'currency',\r\n                },\r\n            }}\r\n        >\r\n            <Form.Item\r\n                name=\"price\"\r\n                label=\"Price\"\r\n                rules={[\r\n                    {\r\n                        validator: checkPrice,\r\n                    },\r\n                ]}\r\n            >\r\n                <PriceInput />\r\n            </Form.Item>\r\n            <Form.Item>\r\n                <Button type=\"primary\" htmlType=\"submit\">\r\n                    Submit\r\n                </Button>\r\n            </Form.Item>\r\n        </Form>\r\n    );\r\n};","import React, {useEffect} from 'react';\r\nimport {useState} from \"react\";\r\nimport {Demo} from \"./InputSubmit\"\r\n\r\n\r\n\r\n\r\nexport const InfoRate = () =>{\r\n\r\n    const [objectData, setObjectData] = useState({});\r\n\r\n    const [result, setResult] = useState();\r\n\r\n    const st1 = objectData.price?.currency;\r\n\r\n    const st2 = objectData.price?.currency2;\r\n\r\n    const number = objectData.price?.number;\r\n\r\n    const GetRate  = `https://free.currconv.com/api/v7/convert?apiKey=do-not-use-this-key&q=${st1}_${st2}`;\r\n\r\n    const Output = (result * number)\r\n\r\n    useEffect(\r\n        () => {\r\n            if(st1 !== null && st2 !== null){\r\n                (async () =>{\r\n                    let res = await fetch(GetRate);\r\n                    let getResult = await res.json();\r\n                    setResult(getResult.results[`${st1}_${st2}`].val);\r\n                })();\r\n            }\r\n        }\r\n    )\r\n\r\n    return(\r\n        <div>\r\n            <div>\r\n                <p>It`s Your Value {Output}</p>\r\n                <Demo setObject = {setObjectData}/>\r\n            </div>\r\n        </div>\r\n    )\r\n    \r\n}\r\n","import React from \"react\";\r\nimport { NavLink }  from \"react-router-dom\";\r\n\r\nexport const Header = () =>{\r\n    return(\r\n        <nav className=\"navbar\">\r\n        <h1>Online info</h1>\r\n        <div className=\"links\">\r\n        <NavLink to=\"/\" exact>Info</NavLink>\r\n        <NavLink to=\"/InfoRate\" style={{ \r\n            color: 'white', \r\n            backgroundColor: '#f1356d',\r\n            borderRadius: '8px' \r\n          }}>currency exchange</NavLink>\r\n        </div>\r\n      </nav>\r\n    );\r\n}\r\n","import './App.css';\r\nimport React, {useState} from \"react\"\r\nimport {SelectForm} from \"./components/Select\";\r\nimport {InfoRate} from \"./components/InfoRate\";\r\nimport {Header} from \"./components/Header\";\r\nimport {Route, Switch} from \"react-router-dom\"\r\n\r\n\r\nexport const App = () => {\r\n\r\n    const [currencyDefault, setCurrencyDefault] = useState(\"BYN\");\r\n    const [currencyFrom, setCurrencyFrom] = useState(\"USD\");\r\n    const [currencyTo, setCurrencyTo] = useState(\"BYN\");\r\n\r\n    return (\r\n        <div className=\"App\">\r\n            <Header/>\r\n            <div className=\"content\">\r\n\r\n                <Switch>\r\n\r\n                    <Route exact path=\"/\">\r\n                        <SelectForm currencyDefault={currencyDefault} setCurrencyDefault = {setCurrencyDefault}/>\r\n                    </Route>\r\n\r\n                    <Route path=\"/InfoRate\">\r\n                        <InfoRate currencyFrom = {currencyFrom} setCurrencyFrom={setCurrencyFrom} currencyTo = {currencyTo} setCurrencyTo={setCurrencyTo}/>\r\n                    </Route>\r\n\r\n                </Switch>\r\n            </div>\r\n        </div>\r\n    );\r\n}","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport {App} from './App'\r\nimport './index.css';\r\nimport {BrowserRouter} from \"react-router-dom\";\r\n/* import reportWebVitals from './reportWebVitals'; */\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <BrowserRouter>\r\n            <App />\r\n        </BrowserRouter>\r\n    </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\n/* reportWebVitals(); */\r\n"],"sourceRoot":""}