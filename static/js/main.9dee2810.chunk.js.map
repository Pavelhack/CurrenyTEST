{"version":3,"sources":["components/Input.js","components/Select.js","components/InputSubmit.js","components/InfoRate.js","components/Header.js","App.js","index.js"],"names":["InputValue","setCurrency","useState","inputValue","setValue","ArrCurrency","Option","Select","i","DB","length","push","name","currencyID","showSearch","value","style","width","margin","placeholder","optionFilterProp","onChange","SelectCurrency","find","elem","index","SelectForm","currencyDefault","setCurrencyDefault","usd","setUSD","eur","setEUR","previousState","useRef","defaultCurrencies","useEffect","current","a","fetch","res","json","resultFrom","results","val","className","PriceInput","number","setNumber","undefined","currency","currency2","setCurrency2","currencies","setCurrencies","response","triggerChange","changedValue","type","e","newNumber","parseInt","target","Number","isNaN","newCurrency","Demo","setObject","layout","onFinish","values","initialValues","price","Item","label","rules","validator","_","Promise","resolve","reject","Error","htmlType","InfoRate","PreviousSt","objectData","setObjectData","result","setResult","st1","st2","GetRate","Output","console","log","getResult","Header","to","exact","color","backgroundColor","borderRadius","App","currencyFrom","setCurrencyFrom","currencyTo","setCurrencyTo","path","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9dee2810.chunk.js","sourcesContent":["import React, {useState, useEffect} from 'react';\r\nimport {Select} from 'antd';\r\nimport DB from './CountryObject.json'\r\n\r\nexport const InputValue = ({ setCurrency }) => {\r\n    const [currencies, setCurrencies] = useState(0);\r\n\r\n    const [inputValue, setValue] = useState('currency')\r\n\r\n    // let urlCurrencies = \"https://free.currconv.com/api/v7/currencies?apiKey=cc1c42623e7c44a5dccf\"\r\n\r\n    const ArrCurrency = [];\r\n\r\n    const {Option} = Select;\r\n\r\n    // for (let i = 0; i < currencies.length - 1; i++) {\r\n    //     ArrCurrency.push(<Option key={currencies[i]}>{currencies[i]}</Option>);\r\n    // }\r\n\r\n    for (let i = 0; i < DB.length - 1; i++) {\r\n        ArrCurrency.push(\r\n            <Option key={DB[i].name}>\r\n                {DB[i].name}\r\n                <br></br>\r\n                {DB[i].currencyID}\r\n            </Option>\r\n        );\r\n    }\r\n\r\n\r\n    // useEffect(\r\n    //     () => {\r\n    //         if (currencies === 0) {\r\n    //             (async () => {\r\n    //                 let response = await fetch(urlCurrencies);\r\n    //                 let result = await response.json();\r\n    //                 for (let i in result.results) {\r\n    //                     ArrCurrency.push(i)\r\n    //                 }\r\n    //                 setCurrencies(ArrCurrency);\r\n    //             })();\r\n    //         }\r\n    //     }\r\n    // )\r\n\r\n\r\n    function onChange(value) {\r\n\r\n        const Callback = (elem, index, DB) =>{\r\n\r\n            if(value === elem.name)\r\n\r\n           return elem\r\n\r\n        }\r\n        let  SelectCurrency = DB.find(Callback).currencyID\r\n\r\n        setCurrency(SelectCurrency);\r\n        setValue(SelectCurrency)\r\n    }\r\n\r\n    return (\r\n        <Select\r\n            showSearch\r\n            value = {inputValue}\r\n            style={{\r\n                width: \"120px\",\r\n                margin: '0 8px',\r\n\r\n            }}\r\n            placeholder=\"Select a currency\"\r\n            optionFilterProp=\"children\"\r\n            onChange={onChange}\r\n        >\r\n            {ArrCurrency}\r\n        </Select>\r\n    )\r\n}\r\n","import React, {useState, useEffect, useRef} from 'react';\r\nimport {InputValue} from './Input'\r\n\r\nexport const SelectForm = ({currencyDefault , setCurrencyDefault}) =>{\r\n\r\n    const [usd, setUSD] = useState(null);\r\n\r\n    const [eur, setEUR] = useState(null);\r\n\r\n    let previousState = useRef(null);\r\n\r\n    const defaultCurrencies = `https://free.currconv.com/api/v7/convert?apiKey=cc1c42623e7c44a5dccf&q=USD_${currencyDefault},EUR_${currencyDefault}`\r\n\r\n    const getDate = \"https://free.currconv.com/api/v7/convert?apiKey=cc1c42623e7c44a5dccf&q=USD_BYN,BYN_USD&compact=ultra&date=2021-04-01&endDate=2021-04-15\"\r\n\r\n    useEffect(\r\n        () => {\r\n            if(previousState.current !== currencyDefault){\r\n                (async () =>{\r\n                    let res = await fetch(defaultCurrencies);\r\n                    let resultFrom = await res.json();\r\n                        setUSD(resultFrom.results[`USD_${currencyDefault}`].val);\r\n                        setEUR(resultFrom.results[`EUR_${currencyDefault}`].val);\r\n                    previousState.current = currencyDefault;\r\n                })();\r\n            }\r\n        }\r\n    )\r\n\r\n\r\n\r\nreturn(\r\n    <div>\r\n        <div className = \"info\">\r\n            <h1>current currency {currencyDefault}</h1>\r\n            <div className = \"USD\">USD > {currencyDefault} = {usd}</div>\r\n            <div className = \"EUR\">EUR > {currencyDefault} = {eur}</div>\r\n        </div>\r\n        <InputValue setCurrency = {setCurrencyDefault}/>\r\n    </div>\r\n);\r\n}\r\n","import React, {useEffect, useState} from 'react';\r\nimport { Form, Input, Select, Button } from 'antd';\r\nimport {InputValue} from \"./Input\";\r\nconst { Option } = Select;\r\n\r\n\r\nconst PriceInput = ({ value = {}, onChange }) => {\r\n    const [number, setNumber] = useState(0);\r\n\r\n    const [currency, setCurrency] = useState(undefined);\r\n\r\n    const [currency2, setCurrency2] = useState(undefined);\r\n\r\n    const [currencies, setCurrencies] = useState([]);\r\n\r\n    const UrlCurrencies = \"https://free.currconv.com/api/v7/currencies?apiKey=cc1c42623e7c44a5dccf\"\r\n\r\n    const ArrCurrency = [];\r\n\r\n    for (let i = 0; i < currencies.length - 1; i++) {\r\n        ArrCurrency.push(<Option key={currencies[i]}>{currencies[i]}</Option>);\r\n    }\r\n\r\n    useEffect(\r\n        () => {\r\n            if (currencies.length === 0) {\r\n                (async () => {\r\n                    let response = await fetch(UrlCurrencies);\r\n                    let result = await response.json();\r\n                    for (let i in result.results) {\r\n                        ArrCurrency.push(i)\r\n                    }\r\n                    setCurrencies(ArrCurrency);\r\n                })();\r\n            }\r\n        }\r\n    )\r\n\r\n    const triggerChange = (changedValue) => {\r\n        onChange?.({\r\n            number,\r\n            currency,\r\n            currency2,\r\n            ...value,\r\n            ...changedValue,\r\n        });\r\n    };\r\n\r\n    const onNumberChange = (e) => {\r\n        const newNumber = parseInt(e.target.value || '0', 10);\r\n\r\n        if (Number.isNaN(number)) {\r\n            return;\r\n        }\r\n\r\n        if (!('number' in value)) {\r\n            setNumber(newNumber);\r\n        }\r\n\r\n        triggerChange({\r\n            number: newNumber,\r\n        });\r\n    };\r\n\r\n    const onCurrencyChange = (newCurrency) => {\r\n        if (!('currency' in value)) {\r\n            setCurrency(newCurrency);\r\n        }\r\n\r\n        triggerChange({\r\n            currency: newCurrency,\r\n        });\r\n    };\r\n    const onCurrencyChange2 = (newCurrency) => {\r\n        if (!('currency2' in value)) {\r\n            setCurrency2(newCurrency);\r\n        }\r\n\r\n        triggerChange({\r\n            currency2: newCurrency,\r\n        });\r\n    };\r\n\r\n    return (\r\n        <span>\r\n              <Input\r\n                  type=\"text\"\r\n                  value={value.number || number}\r\n                  onChange={onNumberChange}\r\n                  style={{\r\n                      width: 100,\r\n                  }}\r\n              />\r\n\r\n              <Select\r\n                  showSearch\r\n                  value={value.currency || currency}\r\n                  style={{ width: 80, margin: '0 8px' }}\r\n                  onChange={onCurrencyChange}\r\n              >\r\n                   {ArrCurrency}\r\n              </Select>\r\n            <Select\r\n                  showSearch\r\n                  value={value.currency2 || currency2}\r\n                  style={{ width: 80, margin: '0 8px' }}\r\n                  onChange={onCurrencyChange2}\r\n              >\r\n                   {ArrCurrency}\r\n              </Select>\r\n        </span>\r\n    );\r\n};\r\n\r\nexport const Demo = ({setObject}) => {\r\n    const onFinish = (values) => {\r\n        setObject(values);\r\n    };\r\n\r\n    const checkPrice = (_, value) => {\r\n        if (value.number > 0) {\r\n            return Promise.resolve();\r\n        }\r\n\r\n        return Promise.reject(new Error('Price must be greater than zero!'));\r\n    };\r\n\r\n    return (\r\n        <Form\r\n            name=\"customized_form_controls\"\r\n            layout=\"inline\"\r\n            onFinish={onFinish}\r\n            initialValues={{\r\n                price: {\r\n                    number: 0,\r\n                    currency: 'currency',\r\n                },\r\n            }}\r\n        >\r\n            <Form.Item\r\n                name=\"price\"\r\n                label=\"Price\"\r\n                rules={[\r\n                    {\r\n                        validator: checkPrice,\r\n                    },\r\n                ]}\r\n            >\r\n                <PriceInput />\r\n            </Form.Item>\r\n            <Form.Item>\r\n                <Button type=\"primary\" htmlType=\"submit\">\r\n                    Submit\r\n                </Button>\r\n            </Form.Item>\r\n        </Form>\r\n    );\r\n};","import React, {useEffect, useRef} from 'react';\r\nimport {useState} from \"react\";\r\nimport {Demo} from \"./InputSubmit\"\r\n\r\n\r\n\r\n\r\nexport const InfoRate = () =>{\r\n\r\n    let PreviousSt = useRef(undefined);\r\n\r\n    const [objectData, setObjectData] = useState({});\r\n\r\n    const [result, setResult] = useState();\r\n\r\n    const st1 = objectData?.price?.currency;\r\n\r\n    const st2 = objectData?.price?.currency2;\r\n\r\n    const number = objectData.price?.number;\r\n\r\n    const GetRate  = `https://free.currconv.com/api/v7/convert?apiKey=cc1c42623e7c44a5dccf&q=${st1}_${st2}`;\r\n\r\n    const Output = (result * number)\r\n\r\n\r\n\r\n    useEffect(\r\n        () => {\r\n            console.log(st1, PreviousSt.current)\r\n\r\n            if(PreviousSt.current !== st1){\r\n                (async () =>{\r\n                    let res = await fetch(GetRate);\r\n                    let getResult = await res.json();\r\n                    setResult(getResult.results[`${st1}_${st2}`].val);\r\n                    PreviousSt.current = st1;\r\n                })();\r\n            }\r\n        }\r\n    )\r\n\r\n    return(\r\n        <div>\r\n            <div>\r\n                <p>It`s Your Value {Output}</p>\r\n                <Demo setObject = {setObjectData}/>\r\n            </div>\r\n        </div>\r\n    )\r\n    \r\n}\r\n","import React from \"react\";\r\nimport { NavLink }  from \"react-router-dom\";\r\n\r\nexport const Header = () =>{\r\n    return(\r\n        <nav className=\"navbar\">\r\n        <h1>Online info</h1>\r\n        <div className=\"links\">\r\n        <NavLink to=\"/\" exact>Info</NavLink>\r\n        <NavLink to=\"/InfoRate\" style={{ \r\n            color: 'white', \r\n            backgroundColor: '#f1356d',\r\n            borderRadius: '8px' \r\n          }}>currency exchange</NavLink>\r\n        </div>\r\n      </nav>\r\n    );\r\n}\r\n","import './App.css';\r\nimport React, {useState} from \"react\"\r\nimport {SelectForm} from \"./components/Select\";\r\nimport {InfoRate} from \"./components/InfoRate\";\r\nimport {Header} from \"./components/Header\";\r\nimport {Route, Switch} from \"react-router-dom\"\r\n\r\n\r\nexport const App = () => {\r\n\r\n    const [currencyDefault, setCurrencyDefault] = useState(\"BYN\");\r\n    const [currencyFrom, setCurrencyFrom] = useState(\"USD\");\r\n    const [currencyTo, setCurrencyTo] = useState(\"BYN\");\r\n\r\n    return (\r\n        <div className=\"App\">\r\n            <Header/>\r\n            <div className=\"content\">\r\n\r\n                <Switch>\r\n\r\n                    <Route exact path=\"/\">\r\n                        <SelectForm currencyDefault={currencyDefault} setCurrencyDefault = {setCurrencyDefault}/>\r\n                    </Route>\r\n\r\n                    <Route exact path=\"/InfoRate\">\r\n                        <InfoRate currencyFrom = {currencyFrom} setCurrencyFrom={setCurrencyFrom} currencyTo = {currencyTo} setCurrencyTo={setCurrencyTo}/>\r\n                    </Route>\r\n\r\n                </Switch>\r\n            </div>\r\n        </div>\r\n    );\r\n}","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport {App} from './App'\r\nimport './index.css';\r\nimport {BrowserRouter, HashRouter} from \"react-router-dom\";\r\n/* import reportWebVitals from './reportWebVitals'; */\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <HashRouter>\r\n            <App />\r\n        </HashRouter>\r\n    </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\n/* reportWebVitals(); */\r\n"],"sourceRoot":""}